name: Deploy Backend

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Deploy to Server
        if: github.ref == 'refs/heads/main'
        uses: appleboy/ssh-action@master
        with:
          host: 37.27.247.208
          username: root
          password: gkjaRhMActfMatPW7nvd
          script: |
            # Create directory structure
            mkdir -p /var/www/sei-institute/backend

            # Clone/pull repository
            if [ -d "/var/www/sei-institute/backend/.git" ]; then
              cd /var/www/sei-institute/backend
              git pull origin main
            else
              git clone --single-branch --branch main https://github.com/${{ github.repository }}.git /var/www/sei-institute/backend
              cd /var/www/sei-institute/backend
            fi

            # Install PostgreSQL if not installed
            if ! command -v psql &> /dev/null; then
              apt-get update
              apt-get install -y postgresql postgresql-contrib
              systemctl enable postgresql
              systemctl start postgresql
            fi

            # Configure PostgreSQL to listen on all interfaces
            echo "listen_addresses = '*'" >> /etc/postgresql/*/main/postgresql.conf
            echo "host all all 0.0.0.0/0 md5" >> /etc/postgresql/*/main/pg_hba.conf
            systemctl restart postgresql

            # Setup PostgreSQL with stronger credentials
            sudo -u postgres psql -c "DO \$\$ BEGIN IF EXISTS (SELECT FROM pg_roles WHERE rolname = 'sei_prod_user') THEN ALTER ROLE sei_prod_user WITH PASSWORD 'StrongP@ssw0rd123'; ELSE CREATE USER sei_prod_user WITH PASSWORD 'StrongP@ssw0rd123'; END IF; END \$\$;"
            sudo -u postgres psql -c "CREATE DATABASE sei_institute OWNER sei_prod_user;"
            sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE sei_institute TO sei_prod_user;"

            # Set production environment variables
            export PORT=9000
            export DATABASE_URL="postgresql://sei_prod_user:StrongP@ssw0rd123@37.27.247.208:5432/sei_institute?schema=public"
            export CLIENT_ENDPOINT="https://sei-institute.com"
            export JWT_SECRET="mahatohariomsfadfnasldkjf"
            export ACCESS_TOKEN_EXPIRES="1d"
            export REFRESH_TOKEN_EXPIRES="7d"
            export NODE_ENV="production"
            export HUGGING_FACE_KEY="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"

            # Install dependencies and update packages
            npm ci
            npm audit fix

            # Run Prisma migrations
            npx prisma migrate deploy

            # Setup nginx with proper EOF
            if [ ! -f /etc/nginx/sites-available/backend ]; then
              cat > /etc/nginx/sites-available/backend << 'EOL'
              server {
                listen 80;
                server_name api.seiinstitute.com;
                location / {
                  proxy_pass http://127.0.0.1:9000;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection "upgrade";
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_cache_bypass $http_upgrade;
                }
              }
              EOL
              ln -sf /etc/nginx/sites-available/backend /etc/nginx/sites-enabled/
              nginx -t && systemctl restart nginx
            fi

            # Install PM2 if not installed
            if ! command -v pm2 &> /dev/null; then
              npm install -g pm2
            fi

            # Start/Restart application
            pm2 delete backend || true
            pm2 start build/server.js --name backend \
              --env PORT=9000 \
              --env DATABASE_URL="postgresql://sei_prod_user:StrongP@ssw0rd123@37.27.247.208:5432/sei_institute?schema=public" \
              --env CLIENT_ENDPOINT="https://sei-institute.com" \
              --env JWT_SECRET="mahatohariomsfadfnasldkjf" \
              --env ACCESS_TOKEN_EXPIRES="1d" \
              --env REFRESH_TOKEN_EXPIRES="7d" \
              --env NODE_ENV="production" \
              --env HUGGING_FACE_KEY="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"
            pm2 save
