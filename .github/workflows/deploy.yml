name: Deploy Backend

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Archive Build
        run: tar -czf backend.tar.gz build package.json package-lock.json prisma src

      - name: Transfer Build Files
        if: github.ref == 'refs/heads/main'
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          source: 'backend.tar.gz'
          target: '/var/www/sei-institute/backend'

      - name: Deploy Application
        if: github.ref == 'refs/heads/main'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            echo "==== Deploying Backend Application ===="

            # Stop the backend application if running
            pm2 stop backend || true
            pm2 delete backend || true

            # Extract application files
            cd /var/www/sei-institute/backend
            tar -xzf backend.tar.gz
            rm backend.tar.gz

            # Create .env file with secure credentials
            cat > .env <<EOF
            PORT=9000
            DATABASE_URL="postgresql://sei_user:${{ secrets.DB_PASSWORD }}@127.0.0.1:5432/sei_institute?schema=public"
            CLIENT_ENDPOINT="https://seiinstitute.com"
            JWT_SECRET="${{ secrets.JWT_SECRET }}"
            ACCESS_TOKEN_EXPIRES="1d"
            REFRESH_TOKEN_EXPIRES="7d"
            NODE_ENV="production"
            API_URL="https://api.seiinstitute.com"
            HUGGING_FACE_KEY="${{ secrets.HUGGING_FACE_KEY }}"
            EOF

            # Install production dependencies
            npm ci --production

            # Generate Prisma client
            npx prisma generate

            # Apply database migrations
            if [ -d "prisma/migrations" ] && [ -n "$(ls -A prisma/migrations)" ]; then
              echo "Applying database migrations..."
              npx prisma migrate deploy
            fi

            # Start the application with PM2
            pm2 start npm --name backend -- start
            pm2 save

            echo "==== Backend Deployment Complete ===="
