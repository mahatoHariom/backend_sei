name: Deploy Backend

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Deploy to Server
        if: github.ref == 'refs/heads/main'
        uses: appleboy/ssh-action@master
        with:
          host: 37.27.247.208
          username: root
          password: gkjaRhMActfMatPW7nvd
          script: |
            # Create directory structure
            mkdir -p /var/www/sei-institute/backend

            # Clone/pull repository with force
            if [ -d "/var/www/sei-institute/backend/.git" ]; then
              cd /var/www/sei-institute/backend
              git fetch origin
              git reset --hard origin/main
            else
              git clone --single-branch --branch main https://github.com/${{ github.repository }}.git /var/www/sei-institute/backend
              cd /var/www/sei-institute/backend
            fi

            # Install PostgreSQL if not installed
            if ! command -v psql &> /dev/null; then
              apt-get update
              apt-get install -y postgresql postgresql-contrib
            fi

            # Ensure PostgreSQL is running
            systemctl enable postgresql
            systemctl start postgresql
            sleep 5 # Give PostgreSQL time to start

            # Fix PostgreSQL authentication configuration
            sudo sed -i 's/local\s\+all\s\+postgres\s\+peer/local all postgres md5/g' /etc/postgresql/*/main/pg_hba.conf
            sudo sed -i 's/host\s\+all\s\+all\s\+127.0.0.1\/32\s\+peer/host all all 127.0.0.1\/32 md5/g' /etc/postgresql/*/main/pg_hba.conf
            systemctl restart postgresql
            sleep 5 # Give time for restart

            # Set postgres password
            echo "ALTER USER postgres WITH PASSWORD 'mahato';" | sudo -u postgres psql

            # Setup database user and permissions
            sudo -u postgres psql <<EOD
            DO \$\$
            BEGIN
              IF EXISTS (SELECT FROM pg_roles WHERE rolname = 'sei_prod_user') THEN
                ALTER ROLE sei_prod_user WITH PASSWORD 'StrongP@ssw0rd123';
              ELSE
                CREATE USER sei_prod_user WITH PASSWORD 'StrongP@ssw0rd123';
              END IF;
            END
            \$\$;
            DROP DATABASE IF EXISTS sei_institute;
            CREATE DATABASE sei_institute;
            GRANT ALL PRIVILEGES ON DATABASE sei_institute TO sei_prod_user;
            \c sei_institute
            GRANT ALL ON SCHEMA public TO sei_prod_user;
            EOD

            # Set production environment variables in .env file
            cat > /var/www/sei-institute/backend/.env <<EOD
            PORT=9000
            DATABASE_URL="postgresql://sei_prod_user:StrongP@ssw0rd123@127.0.0.1:5432/sei_institute?schema=public"
            CLIENT_ENDPOINT="https://sei-institute.com"
            JWT_SECRET="mahatohariomsfadfnasldkjf"
            ACCESS_TOKEN_EXPIRES="1d"
            REFRESH_TOKEN_EXPIRES="7d"
            NODE_ENV="production"
            HUGGING_FACE_KEY="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"
            EOD

            # Navigate to project directory
            cd /var/www/sei-institute/backend

            # Install dependencies and fix vulnerabilities
            npm ci
            npm audit fix --force

            # Run Prisma migrations
            npx prisma generate
            npx prisma migrate deploy

            # Setup nginx configuration
            cat > /etc/nginx/sites-available/backend <<'EOD'
            server {
              listen 80;
              server_name api.seiinstitute.com;
              
              location / {
                proxy_pass http://127.0.0.1:9000;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_cache_bypass $http_upgrade;
              }
            }
            EOD

            # Enable site and restart nginx if config is valid
            ln -sf /etc/nginx/sites-available/backend /etc/nginx/sites-enabled/
            nginx -t && systemctl restart nginx

            # Install PM2 if not installed
            if ! command -v pm2 &> /dev/null; then
              npm install -g pm2
            fi

            # Start/Restart application using .env file
            pm2 delete backend || true
            cd /var/www/sei-institute/backend && pm2 start build/server.js --name backend
            pm2 save