name: Deploy Backend

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Deploy to Server
        if: github.ref == 'refs/heads/main'
        uses: appleboy/ssh-action@master
        with:
          host: 37.27.247.208
          username: root
          password: gkjaRhMActfMatPW7nvd # Hardcoded password
          script: |
            # Create directory structure
            mkdir -p /var/www/sei-institute/backend

            # Clone/pull repository
            if [ -d "/var/www/sei-institute/backend/.git" ]; then
              cd /var/www/sei-institute/backend
              git pull origin main
            else
              git clone --single-branch --branch main https://github.com/${{ github.repository }}.git /var/www/sei-institute/backend
              cd /var/www/sei-institute/backend
            fi

            # Install PostgreSQL if not installed
            if ! command -v psql &> /dev/null; then
              apt-get update
              apt-get install -y postgresql postgresql-contrib
              systemctl enable postgresql
              systemctl start postgresql
            fi

            # Setup PostgreSQL
            sudo -u postgres psql -c "CREATE USER sei_user WITH PASSWORD 'mahato';"
            sudo -u postgres psql -c "CREATE DATABASE sei_institute OWNER sei_user;"
            sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE sei_institute TO sei_user;"

            # Set environment variables directly
            export PORT=9000
            export DATABASE_URL="postgresql://sei_user:mahato@localhost:5432/sei_institute?schema=public"
            export CLIENT_ENDPOINT="http://localhost:3000"
            export JWT_SECRET="mahatohariomsfadfnasldkjf"
            export ACCESS_TOKEN_EXPIRES="1d"
            export REFRESH_TOKEN_EXPIRES="7d"
            export NODE_ENV="production"
            export HUGGING_FACE_KEY="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"

            # Install dependencies
            npm ci

            # Run Prisma migrations with hardcoded env
            npx prisma migrate deploy

            # Setup nginx
            if [ ! -f /etc/nginx/sites-available/backend ]; then
              cat > /etc/nginx/sites-available/backend << EOL
              server {
                listen 80;
                server_name api.seiinstitute.com;
                location / {
                  proxy_pass http://localhost:9000;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade \$http_upgrade;
                  proxy_set_header Connection "upgrade";
                  proxy_set_header Host \$host;
                  proxy_cache_bypass \$http_upgrade;
                }
              }
              EOL
              ln -sf /etc/nginx/sites-available/backend /etc/nginx/sites-enabled/
              nginx -t && systemctl restart nginx
            fi

            # Install PM2 if not installed
            if ! command -v pm2 &> /dev/null; then
              npm install -g pm2
            fi

            # Start/Restart application with environment variables
            pm2 delete backend || true
            pm2 start build/server.js --name backend \
              --env PORT=9000 \
              --env DATABASE_URL="postgresql://sei_user:mahato@localhost:5432/sei_institute?schema=public" \
              --env CLIENT_ENDPOINT="http://localhost:3000" \
              --env JWT_SECRET="mahatohariomsfadfnasldkjf" \
              --env ACCESS_TOKEN_EXPIRES="1d" \
              --env REFRESH_TOKEN_EXPIRES="7d" \
              --env NODE_ENV="production" \
              --env HUGGING_FACE_KEY="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"
            pm2 save
