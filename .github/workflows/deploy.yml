name: Deploy Backend

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Generate .env file
        run: |
          # Create .env file
          echo "DATABASE_URL=postgresql://sei_user:sei@localhost:5432/sei_institute?schema=public" > .env.production
          echo "JWT_SECRET=your-super-secret-jwt-key" >> .env.production
          echo "PORT=3333" >> .env.production
          echo "NODE_ENV=production" >> .env.production
          echo "FRONTEND_URL=https://seiinstitute.com" >> .env.production
          echo "API_URL=https://api.seiinstitute.com" >> .env.production

      - name: Build application
        run: npm run build

      - name: Check for node-llama-cpp dependency
        run: |
          # Remove node-llama-cpp dependency if present
          if grep -q "node-llama-cpp" package.json; then
            echo "Removing node-llama-cpp dependency for deployment"
            sed -i 's/"node-llama-cpp": "[^"]*",\?//g' package.json
          fi

      - name: Install expect
        run: sudo apt-get update && sudo apt-get install -y expect

      - name: Setup SSH config
        run: |
          mkdir -p ~/.ssh
          echo "Host backend-server" > ~/.ssh/config
          echo "  HostName 37.27.247.208" >> ~/.ssh/config
          echo "  User root" >> ~/.ssh/config
          echo "  StrictHostKeyChecking no" >> ~/.ssh/config
          chmod 600 ~/.ssh/config

      - name: Create deployment scripts
        run: |
          # Create directory script
          echo '#!/usr/bin/expect -f
          set timeout 30
          spawn ssh root@37.27.247.208 "mkdir -p /var/www/sei-institute/backend"
          expect "password:"
          send "gkjaRhMActfMatPW7nvd\r"
          expect eof' > create_dir.exp

          # Create rsync script
          echo '#!/usr/bin/expect -f
          set timeout 120
          spawn rsync -avz --delete ./build/ ./package.json ./package-lock.json ./prisma/ ./.env.production root@37.27.247.208:/var/www/sei-institute/backend/
          expect "password:"
          send "gkjaRhMActfMatPW7nvd\r"
          expect eof' > rsync_files.exp

          # Create deployment script
          echo '#!/usr/bin/expect -f
          set timeout 300
          spawn ssh root@37.27.247.208 "cd /var/www/sei-institute/backend && if grep -q \"node-llama-cpp\" package.json; then sed -i '\''s/\"node-llama-cpp\": \"[^\"]*\",\?//g'\'' package.json; fi && npm ci --production --no-optional --omit=dev && npx prisma generate && mv .env.production .env && pm2 delete backend || true && PORT=3333 pm2 start build/index.js --name backend && pm2 save"
          expect "password:"
          send "gkjaRhMActfMatPW7nvd\r"
          expect eof' > deploy_app.exp

          # Create Nginx config file
          echo 'server {
              listen 80;
              listen [::]:80;
              server_name api.seiinstitute.com;
              
              location / {
                  proxy_pass http://localhost:3333;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection "upgrade";
                  proxy_set_header Host $host;
                  proxy_cache_bypass $http_upgrade;
              }
          }' > backend_nginx.conf

          # Create nginx deploy script
          echo '#!/usr/bin/expect -f
          set timeout 30
          # Copy Nginx config file
          spawn scp backend_nginx.conf root@37.27.247.208:/etc/nginx/sites-available/backend
          expect "password:"
          send "gkjaRhMActfMatPW7nvd\r"
          expect eof

          # Enable site and reload
          spawn ssh root@37.27.247.208 "ln -sf /etc/nginx/sites-available/backend /etc/nginx/sites-enabled/ && nginx -t && systemctl reload nginx"
          expect "password:"
          send "gkjaRhMActfMatPW7nvd\r"
          expect eof' > setup_nginx.exp

          # Create verification script
          echo '#!/usr/bin/expect -f
          set timeout 30
          spawn ssh root@37.27.247.208 "pm2 status backend && curl -s http://localhost:3333 && echo '\''Backend is running correctly'\''"
          expect "password:"
          send "gkjaRhMActfMatPW7nvd\r"
          expect eof' > verify.exp

          # Make all scripts executable
          chmod +x *.exp

      - name: Deploy to server
        run: |
          ./create_dir.exp
          ./rsync_files.exp
          ./deploy_app.exp

      - name: Configure Nginx
        run: |
          ./setup_nginx.exp

      - name: Verify deployment
        run: |
          ./verify.exp
