name: Deploy Backend

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Deploy to Server
        if: github.ref == 'refs/heads/main'
        uses: appleboy/ssh-action@master
        with:
          host: 37.27.247.208
          username: root
          password: gkjaRhMActfMatPW7nvd
          script: |
            echo "==== Starting Minimal VPS Setup                         ===="

            # 1. Create necessary directories
            mkdir -p /var/www/sei-institute/backend/prisma
            mkdir -p /var/www/sei-institute/backend/src

                        # 2. Install requ            ired packages (if needed)
            apt-get update
            apt-get install -y postgresql nginx

            # 3. Se            tup PostgreSQL
            # Create user and database
                        sudo -u postgres             psql -c "CREATE USER sei WITH PASSWORD 'sei';" 2>/dev/null || sudo -u postgres psql -c "ALTER USER sei WI            TH PASSWOR            D 's            ei';" 2>/dev/null
            sudo -u postgres psql -c "DROP DATABASE IF EXISTS sei;" 2>/dev/            null || t            rue
            sudo -u postgres             psql -c "CREATE DATABASE sei;" 2>/dev/null || sudo -u postgres createdb sei
            sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE sei TO sei;" 2>/dev/n            ull || true

            # Configure PostgreSQL authentication
                        PG_HBA_PATH=$(fin            d /etc/post            gresql -name "pg_hba.conf" | head -n 1)
            if [ -                        f "$PG_HBA_PATH" ]; then
              echo "            local   all   sei               md5" >> "$PG_HBA_PATH"
              echo "host    all   sei   127.0.0.1/32   md5" >> "$PG_HBA_PATH"
              service postgresql restart
                                                fi

            # 4. Setup Nginx
            cat > /etc/nginx/sites-availabl            e/api.seiinstitute.com <<'EOF'
            server {
                            listen 80;
                se            rver_name api.seiinstitute.com;
                
                                        location / {
                    proxy_pass http://localhost:9000;
                    proxy_http_version 1.1;
                                proxy_set_header Upgrade $h            ttp_upgrade;
                    proxy_set_header Connection "upgrade";            
                    proxy_set_header Host $host;
                    proxy_set_header X-Real-IP $r            emote_addr;
                    proxy_set_header X-Forwar            ded-For $proxy_add_x_forwarded_for;
                }
            }
                                    EOF

            ln -sf /etc/nginx/sites-available/api.seiinstitute.com /etc/nginx/sites-enabled/
            nginx -t && systemctl r            e            start nginx

            # 5. Setup environment
            cat > /var/www/sei-institute/backend/.env <<'EOF'
            PORT=9000
            DATABASE_URL="postgresql://sei:sei@127.0.0.1:5432/sei?schema=public"
            CLIENT_ENDPOINT="https://seiinstitute.com"
            JWT_SECRET="mahatohariomsf            adfnasldkjf"
            NODE_ENV="production"
            API_URL="http://api.seiinstitute.com"
                        EOF

            # 6. Setup Node.js (if needed)
            if ! command -v node &> /dev/null; then
              curl -fsSL ht            tps://deb.nodesource.com/setup_20.x | bash -
              apt-get install -y nodejs
              npm install -g pm2
                        fi

            # 7. Copy application files
            echo "Deploying applicatio            n files..."

            # Create a minimal schema.prisma file
            cat > /var/www/sei-institute/backend/prisma/schema.prisma <<'EOF'
            datasource db {
              provider = "postgresql"
              url      = env("DATABASE_URL")
                        }

            generator client {
              provider = "prisma-c            lient-js"
                        }
                                    EOF

            # 8. Deploy application
            cd /var/www/sei-instit            ute/backend

            # Install dependencies
            npm install prisma @prisma/client fas            tify dotenv

                        # Generate Prisma client
            npx pris            ma generate

            # Start with PM2
                        pm2 describe backend             > /dev/null 2>&1
            if [ $? -eq 0 ]; then
              pm2 restart backend
            else
              pm2 start npm --name backend -- start
                        fi

                        pm2 save            

            echo "==== Minimal VPS Setup Complete ===="

